<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPersonaje</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// inicializaci√≥n 

grav = 0.2;
hsp = 0;
vsp = 0;

movespeed=4;
jumpspeed=7;

//disparo

shoot = 1;

//objetos coleccionables

Objeto1=false;
Objeto2=false;
Objeto3=false;
Objeto4=false;
Objeto5=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shoot = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movimiento del personaje 

// obtener las entradas del teclado 
key_right = keyboard_check(vk_right);
key_left = keyboard_check(vk_left);
key_up = keyboard_check_pressed (vk_up);

// operaciones con las entradas del teclado 
move = key_right - key_left;
hsp = move * movespeed;

// colision horizontal
if (place_meeting(x+hsp, y, objBloque))||(place_meeting(x+hsp,y,objPuerta))
{
    while(!place_meeting(x+sign(hsp), y, objBloque))&amp;&amp;(!place_meeting(x+sign(hsp),y,objPuerta))
    {
    x += sign (hsp);  
    }
    hsp = 0;
}
x += hsp;
if (vsp &lt; 10) {vsp += grav;}
if (place_meeting(x, y+3, objBloque)){
    vsp = key_up *  -jumpspeed;
}

// colision vertical
if (place_meeting(x, y+vsp, objBloque))||(place_meeting(x,y+vsp,objPuerta))
{
    while(!place_meeting(x, y+sign(vsp), objBloque))&amp;&amp;(!place_meeting(x,y+sign(vsp),objPuerta))
    {
        y += sign (vsp);  
    }
    vsp = 0;
}
y += vsp;

//mov
if(movespeed &amp;&amp; jumpspeed){
    if(move){
    sprite_index= sprPersonajeD
    }
    if(-move){
    sprite_index= sprPersonajeI
    }  
    if(-vsp)&amp;&amp;(move){
    sprite_index=sprPersonajeAD
    } 
     if(-vsp)&amp;&amp;(-move){
    sprite_index=sprPersonajeAI
    } 
    if(vsp)&amp;&amp;(move){
    sprite_index= sprAbajoD
    }
     if(vsp)&amp;&amp;(-move){
    sprite_index= sprPersonajeAbajoI
    }  
     if(-move=0){
    sprite_index=sprPersonajePI
    }
}

    



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///balas

if(shoot)&amp;&amp;(hsp&gt;0)&amp;&amp;keyboard_check_pressed(vk_space){
instance_create(x,y+7,objBala)
shoot=0;
alarm[2]=15;
}



if(shoot)&amp;&amp;(hsp&lt;0)&amp;&amp;keyboard_check_pressed(vk_space){
instance_create(x,y+7,objBalaI)
shoot=0;
alarm[2]=15;
}



if(shoot)&amp;&amp;(hsp=0)&amp;&amp;keyboard_check_pressed(vk_space)&amp;&amp;(sprite_index=sprPersonajeD){
instance_create(x,y+7,objBala)
shoot=0;
alarm[2]=15;
}

if(shoot)&amp;&amp;(hsp=0)&amp;&amp;keyboard_check_pressed(vk_space)&amp;&amp;(sprite_index=sprPersonajeI){
instance_create(x,y+7,objBalaI)
shoot=0;
alarm[2]=15;
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///objetos coleccionables

if (place_meeting(x, y, objObjeto1))
    {
   Objeto1 = instance_place(x, y, objObjeto1);
    with(Objeto1)
        {
        instance_destroy();
        Objeto1=true;
        }
    }
    
if (place_meeting(x, y, objObjeto2))
    {
   Objeto2 = instance_place(x, y, objObjeto2);
   
    with(Objeto2)
        {
        instance_destroy();
         Objeto2=true;
        }
    }
    
if (place_meeting(x, y, objObjeto3))
    {
   Objeto3 = instance_place(x, y, objObjeto3);
   
     with(Objeto3)
        {
        instance_destroy();
        Objeto3=true;
        }
    }
    
if (place_meeting(x, y, objObjeto4))
    {
   Objeto4 = instance_place(x, y, objObjeto4);
   
    with(Objeto4)
        {
        instance_destroy();
         Objeto4=true;
        }
    }
    
if (place_meeting(x, y, objObjeto5))
    {
   Objeto5 = instance_place(x, y, objObjeto5);
  
    with(Objeto5)
        {
        instance_destroy();
         Objeto5=true;
        }
    }





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPuerta">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Objeto1)&amp;&amp;(Objeto2)&amp;&amp;(Objeto3)&amp;&amp;(Objeto4)&amp;&amp;(Objeto5)
{
place_meeting(x,y,objPuerta){
    with(other)
    instance_destroy();
    }
}

   

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objTiraBalas">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
health -=15;
with(other)
    {
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMeta">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///meta
if (room_exists(room_next(room)))
    {room_goto_next()};
    else
    {room_goto(inicio);} 
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemigo">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
health -=12;
with(other)
    {
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
