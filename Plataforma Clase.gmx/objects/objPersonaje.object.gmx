<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPersonaje</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// inicializaci√≥n 

grav = 0.2;
hsp = 0;
vsp = 0;


movespeed_normal = 4;
movespeed_powerup= 6;

movespeed = movespeed_normal;

jumpspeed_normal = 7;
jumpspeed_powerup = 10;

jumpspeed = jumpspeed_normal

//disparo

can_shoot = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movespeed = movespeed_normal;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumpspeed = jumpspeed_normal;
sprite_index = sprPersonajePU;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movimiento del personaje 

// obtener las entradas del teclado 
key_right = keyboard_check(vk_right);
key_left = keyboard_check(vk_left);
key_up = keyboard_check_pressed (vk_up);

// operaciones con las entradas del teclado 
move = key_right - key_left;
hsp = move * movespeed;

// colision horizontal
if (place_meeting(x+hsp, y, objBloque)){
    while(!place_meeting(x+sign(hsp), y, objBloque)){
    x += sign (hsp);  
    }
    hsp = 0;
}
x += hsp;

if (vsp &lt; 10) {vsp += grav;}
if (place_meeting(x, y+1, objBloque)){
    vsp = key_up *  -jumpspeed;
}

// colision vertical
if (place_meeting(x, y+vsp, objBloque)){
    while(!place_meeting(x, y+sign(vsp), objBloque)){
        y += sign (vsp);  
    }
    vsp = 0;
}
y += vsp;

//mov poderes
if(movespeed = movespeed_normal &amp;&amp; jumpspeed = jumpspeed_normal){
    if(move){
    sprite_index= sprPersonajeD
    }
    if(-move){
    sprite_index= sprPersonajeI
    }  
    if(-vsp){
    sprite_index= sprPersonajeArriba
    } 
    if(vsp){
    sprite_index= sprPersonajeAbajo
    } 
}

else{
    if(movespeed==movespeed_powerup){
    sprite_index = sprVID
    }
    if(jumpspeed==jumpspeed_powerup){
    sprite_index = sprID}
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///balas

fire= keyboard_check(vk_space);

if (fire)
    {
    if(can_shoot)
        {
          instance_create(x,y+(sprite_height/2-3), objBala);
          can_shoot=0;
          alarm[2]=15;
        }
  
    }
//balas



if(can_shoot)&amp;&amp;(keyboard_check(vk_space)&amp;&amp;(sprite_index=sprPersonajeD))
    {
        {
          instance_create(x,y+(sprite_height/2-3), objBalaD);
          can_shoot=0;
          alarm[2]=15;
        }
  
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMeta">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///meta
if (room_exists(room_next(room)))
    {room_goto_next()};
    else
    {room_goto(inicio);} 
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
